// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.3.20'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.tencent.bugly:symtabfileuploader:latest.release'
        classpath 'com.billy.android:autoregister:1.1.3'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        google()
        maven { url "https://jitpack.io" }
        maven { url "https://raw.github.com/bmob/bmob-android-sdk/master" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


ext {
    versionName = "3.0.2"
    testNum = "0001"

    compileSdkVersion = 27
    minSdkVersion = 19
    targetSdkVersion = 27

    androidSupportVersion = '27.0.2'
    ankoVersion = '0.10.3'
    constraintLayoutVersion = '1.0.2'
    SmartRefreshLayoutVersion = '1.0.4-5'
    BaseRecyclerViewAdapterHelperVersion = '2.9.28'
    okgoVersion = '3.0.4'
    okserverVersion = '2.0.5'
    gsonVersion = '2.8.2'
    qmuiVersion = '1.0.4'
    lifecycleVersion = '1.1.0'
    loggerVersion = '1.15'

    alerterVersion = '2.0.2'
    jiaozivideoplayerVersion = '6.2.7'

    //bmob
    bmobSdkVersion = '3.4.6'
    bmobOkhttpVersion = '2.4.0'
    bmobOkioVersion = '1.13.0'
    bmobHttpVersion = '1.0'
    //bmob

    fragmentationVersion = '1.1.10'
    eventbusVersion = '3.1.1'

    litepalVersion = '1.3.1'
}

def getReleaseVersionName() {
    return rootProject.ext.versionName + "-release"
}

def getTestVersionName() {
    return String.format("%s.%s", rootProject.ext.versionName,
            rootProject.ext.testNum)
}

static int gitVersionCode() {
    def count = "git rev-list HEAD --count".execute().text.trim()
    return count.isInteger() ? count.toInteger() : 0
}
